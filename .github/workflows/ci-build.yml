name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java: ['23']
        maven: ['3.9.6']
        os: ['ubuntu-22.04']
    name: Build (Java ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up line endings
        if: ${{ matrix.os == 'windows-2022' }}
        run: |
          git config --global core.autocrlf false
          git config --global core.eol crlf

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Set up Maven ${{ matrix.maven }}
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ matrix.maven }}

      - name: Build and Package
        id: build
        run: mvn clean package -B
        env:
          MAVEN_OPTS: >-
            -Xmx2g
            -Dmaven.wagon.http.retryHandler.count=5
            -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Archive JAR
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: streamspace-jar
          path: target/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: "Release v${{ github.run_number }}"
          body: "Automated release for build #${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/*.jar
          asset_name: streamspace-${{ github.run_number }}.jar
          asset_content_type: application/java-archive
